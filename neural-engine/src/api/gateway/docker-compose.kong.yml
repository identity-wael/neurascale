version: '3.8'

# Kong API Gateway Docker Compose Configuration
# NeuraScale Neural Engine - Phase 12 API Implementation

services:
  # PostgreSQL Database for Kong
  kong-database:
    image: postgres:15-alpine
    container_name: neurascale-kong-db
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong-neurascale-2025}
      POSTGRES_DB: kong
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - kong-db:/var/lib/postgresql/data
    networks:
      - neurascale-kong
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Kong Database Migration
  kong-migration:
    image: kong:3.4-alpine
    container_name: neurascale-kong-migration
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong-neurascale-2025}
      KONG_PG_DATABASE: kong
    command: kong migrations bootstrap
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
      - neurascale-kong
    restart: "no"

  # Kong API Gateway
  kong-gateway:
    image: kong:3.4-alpine
    container_name: neurascale-kong-gateway
    environment:
      # Database Configuration
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong-neurascale-2025}
      KONG_PG_DATABASE: kong

      # Gateway Configuration
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"

      # Security Configuration
      KONG_TRUSTED_IPS: "0.0.0.0/0,::/0"
      KONG_REAL_IP_HEADER: "X-Forwarded-For"
      KONG_REAL_IP_RECURSIVE: "on"

      # SSL Configuration
      KONG_SSL_CERT: /etc/kong/ssl/kong.crt
      KONG_SSL_CERT_KEY: /etc/kong/ssl/kong.key
      KONG_ADMIN_SSL_CERT: /etc/kong/ssl/admin.crt
      KONG_ADMIN_SSL_CERT_KEY: /etc/kong/ssl/admin.key

      # Performance Tuning
      KONG_WORKER_PROCESSES: "auto"
      KONG_WORKER_CONNECTIONS: 4096
      KONG_UPSTREAM_KEEPALIVE_POOL_SIZE: 60
      KONG_UPSTREAM_KEEPALIVE_MAX_REQUESTS: 100
      KONG_UPSTREAM_KEEPALIVE_IDLE_TIMEOUT: 60

      # Logging
      KONG_LOG_LEVEL: info
      KONG_PLUGINS: "bundled,circuit-breaker"

      # Custom Configuration
      KONG_NGINX_WORKER_PROCESSES: "auto"
      KONG_NGINX_DAEMON: "off"
    ports:
      - "8000:8000"   # Kong Proxy HTTP
      - "8443:8443"   # Kong Proxy HTTPS
      - "8001:8001"   # Kong Admin API HTTP
      - "8444:8444"   # Kong Admin API HTTPS
    volumes:
      - ./kong/kong.yml:/etc/kong/kong.yml:ro
      - ./kong/ssl:/etc/kong/ssl:ro
      - kong-logs:/var/log/kong
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_completed_successfully
    networks:
      - neurascale-kong
      - neurascale-api
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Kong Configuration Loader
  kong-deck:
    image: kong/deck:1.17.0
    container_name: neurascale-kong-deck
    environment:
      DECK_KONG_ADDR: http://kong-gateway:8001
    volumes:
      - ./kong/kong.yml:/workspace/kong.yml:ro
    command: |
      sh -c "
        echo 'Waiting for Kong to be ready...'
        until kong --help > /dev/null 2>&1; do sleep 2; done
        echo 'Kong is ready, applying configuration...'
        deck sync --config /workspace/kong.yml
        echo 'Kong configuration applied successfully'
      "
    depends_on:
      kong-gateway:
        condition: service_healthy
    networks:
      - neurascale-kong
    restart: "no"

  # Redis Cache (for rate limiting and caching)
  kong-redis:
    image: redis:7-alpine
    container_name: neurascale-kong-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - kong-redis:/data
    networks:
      - neurascale-kong
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Prometheus Metrics (optional)
  kong-prometheus:
    image: prom/prometheus:latest
    container_name: neurascale-kong-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./kong/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - neurascale-kong
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Grafana Dashboard (optional)
  kong-grafana:
    image: grafana/grafana:latest
    container_name: neurascale-kong-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-neurascale-grafana-2025}
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./kong/grafana:/etc/grafana/provisioning:ro
    networks:
      - neurascale-kong
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

# Networks
networks:
  neurascale-kong:
    driver: bridge
    name: neurascale-kong-network
  neurascale-api:
    external: true
    name: neurascale-api-network

# Volumes
volumes:
  kong-db:
    name: neurascale-kong-database
  kong-logs:
    name: neurascale-kong-logs
  kong-redis:
    name: neurascale-kong-redis
  prometheus-data:
    name: neurascale-kong-prometheus
  grafana-data:
    name: neurascale-kong-grafana
