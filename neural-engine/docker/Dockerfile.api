# Neural Engine API Dockerfile
# Using NVIDIA CUDA base for numpy/pandas compatibility
FROM nvidia/cuda:12.6.0-runtime-ubuntu24.04 AS base

# Install Python 3.13
RUN apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
    python3.13 \
    python3.13-dev \
    python3.13-venv \
    python3-pip \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.13 1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install system dependencies and security updates
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set pip to use more parallel downloads and increase timeout
ENV PIP_DEFAULT_TIMEOUT=300 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_RETRIES=3

# First stage: Dependencies
FROM base AS dependencies
# Copy only requirements to cache dependencies
COPY requirements-no-ml.txt ./requirements.txt
COPY constraints.txt ./constraints.txt
# Install dependencies
RUN python3.13 -m pip install --break-system-packages --upgrade pip setuptools wheel && \
    python3.13 -m pip install --break-system-packages -c constraints.txt -r requirements.txt

# Second stage: Application
FROM dependencies AS app
# Copy source code
COPY src/ ./src/
COPY processing/ ./processing/
COPY devices/ ./devices/
COPY api/ ./api/
COPY monitoring/ ./monitoring/
COPY security/ ./security/
COPY ledger/ ./ledger/
COPY setup.py .
COPY README.md .

# Install the package
RUN python3.13 -m pip install --break-system-packages -e .

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/key.json
ENV PORT=8080

# Expose port
EXPOSE 8080

# Run the API server
CMD ["gunicorn", "--bind", ":8080", "--workers", "4", "--threads", "8", "--timeout", "0", "src.api.main:app"]
