# Neural Data Ingestion Service
# Using NVIDIA CUDA base for numpy/pandas compatibility
FROM nvidia/cuda:12.6.0-runtime-ubuntu24.04 AS base

# Install Python 3.13
RUN apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
    python3.13 \
    python3.13-dev \
    python3.13-venv \
    python3-pip \
    curl \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.13 1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Security updates
RUN apt-get update && apt-get upgrade -y && rm -rf /var/lib/apt/lists/*

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Set pip environment with increased timeout
ENV PIP_DEFAULT_TIMEOUT=300 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_RETRIES=3

# First stage: Dependencies
FROM base AS dependencies
# Copy requirements first for better caching
COPY requirements-no-ml.txt ./requirements.txt
COPY constraints.txt ./constraints.txt

# Install Python dependencies
RUN python3.13 -m pip install --break-system-packages --upgrade pip setuptools wheel && \
    python3.13 -m pip install --break-system-packages -c constraints.txt -r requirements.txt

# Second stage: Application
FROM dependencies AS app
# Copy source code
COPY src/ ./src/
COPY processing/ ./processing/
COPY devices/ ./devices/
COPY api/ ./api/
COPY monitoring/ ./monitoring/
COPY security/ ./security/
COPY ledger/ ./ledger/
COPY examples/ ./examples/
COPY setup.py .
COPY README.md .

# Install the package in development mode
RUN python3.13 -m pip install --break-system-packages -e .

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/service-account.json

# Create directories
RUN mkdir -p /app/data /app/logs /app/credentials

# Default command runs the example
CMD ["python", "examples/ingestion_example.py"]
