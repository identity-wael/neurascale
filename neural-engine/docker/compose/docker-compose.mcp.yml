version: '3.8'

services:
  # MCP Neural Data Server
  mcp-neural-data:
    build:
      context: ../../..
      dockerfile: neural-engine/docker/dockerfiles/services/mcp-neural-data/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: ${REGISTRY:-neurascale}/mcp-neural-data:${TAG:-latest}
    container_name: mcp-neural-data
    restart: unless-stopped
    ports:
      - "9001:9001"  # MCP server port
      - "8081:8080"  # Health check port
    environment:
      - MCP_SERVER_TYPE=neural_data
      - MCP_SERVER_PORT=9001
      - NEURAL_ENGINE_API_URL=http://neural-processor:8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=neural_engine
      - DB_USER=neural_engine
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      neural-processor:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - neural-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # MCP Device Control Server
  mcp-device-control:
    build:
      context: ../../..
      dockerfile: neural-engine/docker/dockerfiles/services/mcp-device-control/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: ${REGISTRY:-neurascale}/mcp-device-control:${TAG:-latest}
    container_name: mcp-device-control
    restart: unless-stopped
    ports:
      - "9002:9002"  # MCP server port
      - "8082:8080"  # Health check port
    environment:
      - MCP_SERVER_TYPE=device_control
      - MCP_SERVER_PORT=9002
      - DEVICE_MANAGER_API_URL=http://device-manager:8001
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=neural_engine
      - DB_USER=neural_engine
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      device-manager:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - neural-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Combined MCP Server (both servers in one container)
  mcp-server:
    build:
      context: ../../..
      dockerfile: neural-engine/docker/dockerfiles/services/mcp-neural-data/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: ${REGISTRY:-neurascale}/mcp-server:${TAG:-latest}
    container_name: mcp-server
    restart: unless-stopped
    ports:
      - "9001:9001"  # Neural data server port
      - "9002:9002"  # Device control server port
      - "8080:8080"  # Health check port
    environment:
      - MCP_SERVERS=neural_data,device_control
      - NEURAL_ENGINE_API_URL=http://neural-processor:8000
      - DEVICE_MANAGER_API_URL=http://device-manager:8001
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=neural_engine
      - DB_USER=neural_engine
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      neural-processor:
        condition: service_healthy
      device-manager:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - neural-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command: ["python", "-m", "src.mcp.main", "--servers", "neural_data", "device_control"]

networks:
  neural-net:
    external: true
